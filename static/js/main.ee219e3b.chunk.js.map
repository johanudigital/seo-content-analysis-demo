{"version":3,"sources":["seo-content-outline-tool.js","index.js"],"names":["SEOContentOutlineTool","content","setContent","useState","keyword","setKeyword","seoScore","setSeoScore","feedback","setFeedback","metaDescription","setMetaDescription","metaFeedback","setMetaFeedback","activeTab","setActiveTab","useEffect","analyzeSEO","analyzeMetaDescription","score","feedbackItems","wordCount","split","length","push","slice","toLowerCase","includes","keywordDensity","match","RegExp","_jsxs","className","children","_jsx","onClick","_Fragment","type","value","onChange","e","target","placeholder","style","width","concat","map","item","index","ReactDOM","render","Router","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ee219e3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SEOContentOutlineTool = () => {\n  const [content, setContent] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [seoScore, setSeoScore] = useState(0);\n  const [feedback, setFeedback] = useState([]);\n  const [metaDescription, setMetaDescription] = useState('');\n  const [metaFeedback, setMetaFeedback] = useState([]);\n  const [activeTab, setActiveTab] = useState('content');\n\n  useEffect(() => {\n    if (content && keyword) {\n      analyzeSEO();\n    }\n  }, [content, keyword]);\n\n  useEffect(() => {\n    if (metaDescription) {\n      analyzeMetaDescription();\n    }\n  }, [metaDescription]);\n\n  const analyzeSEO = () => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Check content length\n    const wordCount = content.split(/\\s+/).length;\n    if (wordCount >= 300) {\n      score += 20;\n      feedbackItems.push(\"✅ Good content length (300+ words)\");\n    } else {\n      feedbackItems.push(\"❌ Content is too short. Aim for 300+ words\");\n    }\n\n    // Check keyword presence in the first 100 characters\n    if (content.slice(0, 100).toLowerCase().includes(keyword.toLowerCase())) {\n      score += 15;\n      feedbackItems.push(\"✅ Keyword present in the introduction\");\n    } else {\n      feedbackItems.push(\"❌ Include the keyword in the first 100 characters\");\n    }\n\n    // Check keyword density\n    const keywordCount = (content.toLowerCase().match(new RegExp(keyword.toLowerCase(), \"g\")) || []).length;\n    const keywordDensity = (keywordCount / wordCount) * 100;\n    if (keywordDensity >= 0.5 && keywordDensity <= 2.5) {\n      score += 15;\n      feedbackItems.push(\"✅ Good keyword density\");\n    } else if (keywordDensity > 2.5) {\n      feedbackItems.push(\"❌ Keyword stuffing detected. Reduce keyword usage\");\n    } else {\n      feedbackItems.push(\"❌ Increase keyword usage slightly\");\n    }\n\n    // Check for headings\n    if (content.includes('#')) {\n      score += 10;\n      feedbackItems.push(\"✅ Headings detected\");\n    } else {\n      feedbackItems.push(\"❌ Add headings (use # for h1, ## for h2, etc.)\");\n    }\n\n    // Check for links\n    if (content.includes('http') || content.includes('www')) {\n      score += 10;\n      feedbackItems.push(\"✅ Links detected\");\n    } else {\n      feedbackItems.push(\"❌ Add internal or external links\");\n    }\n\n    // Check for bullet points or numbered lists\n    if (content.includes('-') || content.includes('1.')) {\n      score += 10;\n      feedbackItems.push(\"✅ Lists detected\");\n    } else {\n      feedbackItems.push(\"❌ Consider adding bullet points or numbered lists\");\n    }\n\n    // Check for image alt text (simulated)\n    if (content.includes('![') && content.includes('](')) {\n      score += 10;\n      feedbackItems.push(\"✅ Image with alt text detected\");\n    } else {\n      feedbackItems.push(\"❌ Add images with descriptive alt text\");\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  };\n\n  const analyzeMetaDescription = () => {\n    let feedbackItems = [];\n\n    // Check meta description length\n    const length = metaDescription.length;\n    if (length >= 50 && length <= 160) {\n      feedbackItems.push(\"✅ Good meta description length (50-160 characters)\");\n    } else if (length < 50) {\n      feedbackItems.push(\"❌ Meta description is too short. Aim for 50-160 characters\");\n    } else {\n      feedbackItems.push(\"❌ Meta description is too long. Aim for 50-160 characters\");\n    }\n\n    // Check keyword presence in meta description\n    if (metaDescription.toLowerCase().includes(keyword.toLowerCase())) {\n      feedbackItems.push(\"✅ Keyword present in meta description\");\n    } else {\n      feedbackItems.push(\"❌ Include the keyword in the meta description\");\n    }\n\n    // Update state\n    setMetaFeedback(feedbackItems);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>UDigital SEO Checker</h1>\n      <div className=\"tabs\">\n        <button onClick={() => setActiveTab('content')} className={activeTab === 'content' ? 'active' : ''}>Content</button>\n        <button onClick={() => setActiveTab('meta')} className={activeTab === 'meta' ? 'active' : ''}>Meta Description</button>\n      </div>\n      {activeTab === 'content' && (\n        <>\n          <div className=\"mb-4\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n              placeholder=\"Enter target keyword\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <textarea\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              placeholder=\"Enter your content here...\"\n            />\n          </div>\n          <div className=\"seo-score\">\n            <h2>SEO Score: {seoScore}/100</h2>\n            <div className=\"progress-bar\">\n              <div className=\"progress-bar-inner\" style={{ width: `${seoScore}%` }}></div>\n            </div>\n          </div>\n          <div>\n            <h3>SEO Feedback:</h3>\n            <ul className=\"feedback\">\n              {feedback.map((item, index) => (\n                <li key={index}>{item}</li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n      {activeTab === 'meta' && (\n        <>\n          <div className=\"mb-4\">\n            <textarea\n              value={metaDescription}\n              onChange={(e) => setMetaDescription(e.target.value)}\n              placeholder=\"Enter meta description here...\"\n            />\n          </div>\n          <div>\n            <h3>Meta Description Feedback:</h3>\n            <ul className=\"feedback\">\n              {metaFeedback.map((item, index) => (\n                <li key={index}>{item}</li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SEOContentOutlineTool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SEOContentOutlineTool from './seo-content-outline-tool';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <SEOContentOutlineTool />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}