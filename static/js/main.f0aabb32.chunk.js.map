{"version":3,"sources":["seo-content-outline-tool.js","index.js"],"names":["SEOContentOutlineTool","content","setContent","useState","keyword","setKeyword","seoScore","setSeoScore","feedback","setFeedback","metaTitle","setMetaTitle","metaDescription","setMetaDescription","metaTitleFeedback","setMetaTitleFeedback","metaDescriptionFeedback","setMetaDescriptionFeedback","activeTab","setActiveTab","productDescription","setProductDescription","categoryContent","setCategoryContent","analyzeSEO","useCallback","debounce","score","feedbackItems","wordCount","split","length","push","type","message","slice","toLowerCase","includes","keywordDensity","match","RegExp","headingsCount","concat","linksCount","listsCount","imagesCount","analyzeMeta","titleFeedbackItems","descriptionFeedbackItems","titleLength","ctaKeywords","some","cta","descriptionLength","analyzeProductDescription","analyzeCategoryContent","useEffect","FeedbackItem","_ref","item","_jsxs","className","children","_jsx","onClick","_Fragment","value","onChange","e","target","placeholder","style","width","map","index","ReactDOM","render","Router","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f0aabb32.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { debounce } from 'lodash';\n\nconst SEOContentOutlineTool = () => {\n  const [content, setContent] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [seoScore, setSeoScore] = useState(0);\n  const [feedback, setFeedback] = useState([]);\n  const [metaTitle, setMetaTitle] = useState('');\n  const [metaDescription, setMetaDescription] = useState('');\n  const [metaTitleFeedback, setMetaTitleFeedback] = useState([]);\n  const [metaDescriptionFeedback, setMetaDescriptionFeedback] = useState([]);\n  const [activeTab, setActiveTab] = useState('blogPost');\n  const [productDescription, setProductDescription] = useState('');\n  const [categoryContent, setCategoryContent] = useState('');\n\n  const analyzeSEO = useCallback(debounce(() => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Content length check\n    const wordCount = content.split(/\\s+/).length;\n    if (wordCount >= 300) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Good content length (300+ words)\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Content is too short. Aim for 300+ words\" });\n    }\n\n    // Keyword presence in introduction\n    if (content.slice(0, 100).toLowerCase().includes(keyword.toLowerCase())) {\n      score += 15;\n      feedbackItems.push({ type: 'success', message: \"Keyword present in the introduction\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Include the keyword in the first 100 characters\" });\n    }\n\n    // Keyword density\n    const keywordCount = (content.toLowerCase().match(new RegExp(keyword.toLowerCase(), \"g\")) || []).length;\n    const keywordDensity = (keywordCount / wordCount) * 100;\n    if (keywordDensity >= 0.5 && keywordDensity <= 2.5) {\n      score += 15;\n      feedbackItems.push({ type: 'success', message: \"Good keyword density\" });\n    } else if (keywordDensity > 2.5) {\n      feedbackItems.push({ type: 'error', message: \"Keyword stuffing detected. Reduce keyword usage\" });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Increase keyword usage slightly\" });\n    }\n\n    // Headings check\n    const headingsRegex = /^#+\\s.+$/gm;\n    const headingsCount = (content.match(headingsRegex) || []).length;\n    if (headingsCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${headingsCount} heading(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Add headings (use # for h1, ## for h2, etc.)\" });\n    }\n\n    // Links check\n    const linksRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n    const linksCount = (content.match(linksRegex) || []).length;\n    if (linksCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${linksCount} link(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Add internal or external links\" });\n    }\n\n    // Lists check\n    const listsRegex = /^(-|\\d+\\.)\\s.+$/gm;\n    const listsCount = (content.match(listsRegex) || []).length;\n    if (listsCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${listsCount} list item(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Consider adding bullet points or numbered lists\" });\n    }\n\n    // Image alt text check\n    const imageRegex = /!\\[([^\\]]*)\\]\\(([^)]+)\\)/g;\n    const imagesCount = (content.match(imageRegex) || []).length;\n    if (imagesCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${imagesCount} image(s) with alt text detected` });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Add images with descriptive alt text\" });\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  }, 500), [content, keyword]);\n\n  const analyzeMeta = useCallback(debounce(() => {\n    let titleFeedbackItems = [];\n    let descriptionFeedbackItems = [];\n\n    // Meta title checks\n    const titleLength = metaTitle.length;\n    if (titleLength >= 50 && titleLength <= 60) {\n      titleFeedbackItems.push({ type: 'success', message: \"Good meta title length (50-60 characters)\" });\n    } else if (titleLength < 50) {\n      titleFeedbackItems.push({ type: 'error', message: \"Meta title is too short. Aim for 50-60 characters\" });\n    } else {\n      titleFeedbackItems.push({ type: 'error', message: \"Meta title is too long. Aim for 50-60 characters\" });\n    }\n\n    if (metaTitle.toLowerCase().includes(keyword.toLowerCase())) {\n      titleFeedbackItems.push({ type: 'success', message: \"Keyword present in meta title\" });\n    } else {\n      titleFeedbackItems.push({ type: 'error', message: \"Include the keyword in the meta title\" });\n    }\n\n    const ctaKeywords = [\"buy\", \"get\", \"try\", \"find\", \"learn\"];\n    if (ctaKeywords.some(cta => metaTitle.toLowerCase().includes(cta))) {\n      titleFeedbackItems.push({ type: 'success', message: \"Call-to-Action keyword present in meta title\" });\n    } else {\n      titleFeedbackItems.push({ type: 'warning', message: \"Consider adding a Call-to-Action keyword in the meta title\" });\n    }\n\n    // Meta description checks\n    const descriptionLength = metaDescription.length;\n    if (descriptionLength >= 50 && descriptionLength <= 160) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Good meta description length (50-160 characters)\" });\n    } else if (descriptionLength < 50) {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Meta description is too short. Aim for 50-160 characters\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Meta description is too long. Aim for 50-160 characters\" });\n    }\n\n    if (metaDescription.toLowerCase().includes(keyword.toLowerCase())) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Keyword present in meta description\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Include the keyword in the meta description\" });\n    }\n\n    if (ctaKeywords.some(cta => metaDescription.toLowerCase().includes(cta))) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Call-to-Action present in meta description\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'warning', message: \"Consider adding a Call-to-Action in the meta description\" });\n    }\n\n    // Update state\n    setMetaTitleFeedback(titleFeedbackItems);\n    setMetaDescriptionFeedback(descriptionFeedbackItems);\n  }, 500), [metaTitle, metaDescription, keyword]);\n\n  const analyzeProductDescription = useCallback(debounce(() => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Product description length check\n    const wordCount = productDescription.split(/\\s+/).length;\n    if (wordCount >= 100) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Good product description length (100+ words)\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Product description is too short. Aim for 100+ words\" });\n    }\n\n    // Keyword presence in product description\n    if (productDescription.toLowerCase().includes(keyword.toLowerCase())) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Keyword present in product description\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Include the keyword in the product description\" });\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  }, 500), [productDescription, keyword]);\n\n  const analyzeCategoryContent = useCallback(debounce(() => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Category page content length check\n    const wordCount = categoryContent.split(/\\s+/).length;\n    if (wordCount >= 200) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Good category page content length (200+ words)\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Category page content is too short. Aim for 200+ words\" });\n    }\n\n    // Keyword presence in category content\n    if (categoryContent.toLowerCase().includes(keyword.toLowerCase())) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Keyword present in category content\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Include the keyword in the category content\" });\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  }, 500), [categoryContent, keyword]);\n\n  useEffect(() => {\n    if (content && keyword && activeTab === 'blogPost') {\n      analyzeSEO();\n    }\n  }, [content, keyword, analyzeSEO, activeTab]);\n\n  useEffect(() => {\n    if ((metaTitle || metaDescription) && activeTab === 'metaContent') {\n      analyzeMeta();\n    }\n  }, [metaTitle, metaDescription, analyzeMeta, activeTab]);\n\n  useEffect(() => {\n    if (productDescription && keyword && activeTab === 'productDescriptions') {\n      analyzeProductDescription();\n    }\n  }, [productDescription, keyword, analyzeProductDescription, activeTab]);\n\n  useEffect(() => {\n    if (categoryContent && keyword && activeTab === 'categoryPage') {\n      analyzeCategoryContent();\n    }\n  }, [categoryContent, keyword, analyzeCategoryContent, activeTab]);\n\n  const FeedbackItem = ({ item }) => (\n    <li className={`feedback-item ${item.type}`}>\n      {item.type === 'success' && '✅ '}\n      {item.type === 'error' && '❌ '}\n      {item.type === 'warning' && '⚠️ '}\n      {item.message}\n    </li>\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>UDigital SEO Tool</h1>\n      <div className=\"tabs\">\n        <button\n          onClick={() => setActiveTab('blogPost')}\n          className={`tab ${activeTab === 'blogPost' ? 'active' : ''}`}\n        >\n          Blog Post\n        </button>\n        <button\n          onClick={() => setActiveTab('metaContent')}\n          className={`tab ${activeTab === 'metaContent' ? 'active' : ''}`}\n        >\n          Meta Content\n        </button>\n        <button\n          onClick={() => setActiveTab('productDescriptions')}\n          className={`tab ${activeTab === 'productDescriptions' ? 'active' : ''}`}\n        >\n          Product Descriptions\n        </button>\n        <button\n          onClick={() => setActiveTab('categoryPage')}\n          className={`tab ${activeTab === 'categoryPage' ? 'active' : ''}`}\n        >\n          Category Page\n        </button>\n      </div>\n      {activeTab === 'blogPost' && (\n        <>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n              placeholder=\"Enter target keyword\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              placeholder=\"Enter your content here...\"\n            />\n          </div>\n          <div className=\"seo-score\">\n            <h2>SEO Score: {seoScore}/100</h2>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-bar-inner\"\n                style={{ width: `${seoScore}%` }}\n              ></div>\n            </div>\n          </div>\n          <div>\n            <h3>SEO Feedback:</h3>\n            <ul className=\"feedback\">\n              {feedback.map((item, index) => (\n                <FeedbackItem key={index} item={item} />\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n      {activeTab === 'metaContent' && (\n        <>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={metaTitle}\n              onChange={(e) => setMetaTitle(e.target.value)}\n              placeholder=\"Enter meta title here...\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              value={metaDescription}\n              onChange={(e) => setMetaDescription(e.target.value)}\n              placeholder=\"Enter meta description here...\"\n            />\n          </div>\n          <div>\n            <h3>Meta Feedback:</h3>\n            {metaTitle && (\n              <>\n                <h4>Meta Title Feedback:</h4>\n                <ul className=\"feedback\">\n                  {metaTitleFeedback.map((item, index) => (\n                    <FeedbackItem key={index} item={item} />\n                  ))}\n                </ul>\n              </>\n            )}\n            {metaDescription && (\n              <>\n                <h4>Meta Description Feedback:</h4>\n                <ul className=\"feedback\">\n                  {metaDescriptionFeedback.map((item, index) => (\n                    <FeedbackItem key={index} item={item} />\n                  ))}\n                </ul>\n              </>\n            )}\n          </div>\n        </>\n      )}\n      {activeTab === 'productDescriptions' && (\n        <>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n              placeholder=\"Enter target keyword\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              value={productDescription}\n              onChange={(e) => setProductDescription(e.target.value)}\n              placeholder=\"Enter product description here...\"\n            />\n          </div>\n          <div className=\"seo-score\">\n            <h2>SEO Score: {seoScore}/100</h2>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-bar-inner\"\n                style={{ width: `${seoScore}%` }}\n              ></div>\n            </div>\n          </div>\n          <div>\n            <h3>SEO Feedback:</h3>\n            <ul className=\"feedback\">\n              {feedback.map((item, index) => (\n                <FeedbackItem key={index} item={item} />\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n      {activeTab === 'categoryPage' && (\n        <>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n              placeholder=\"Enter target keyword\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              value={categoryContent}\n              onChange={(e) => setCategoryContent(e.target.value)}\n              placeholder=\"Enter category page content here...\"\n            />\n          </div>\n          <div className=\"seo-score\">\n            <h2>SEO Score: {seoScore}/100</h2>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-bar-inner\"\n                style={{ width: `${seoScore}%` }}\n              ></div>\n            </div>\n          </div>\n          <div>\n            <h3>SEO Feedback:</h3>\n            <ul className=\"feedback\">\n              {feedback.map((item, index) => (\n                <FeedbackItem key={index} item={item} />\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SEOContentOutlineTool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SEOContentOutlineTool from './seo-content-outline-tool';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <SEOContentOutlineTool />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}