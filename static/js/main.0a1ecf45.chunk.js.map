{"version":3,"sources":["seo-content-outline-tool.js","index.js"],"names":["SEOContentOutlineTool","content","setContent","useState","keyword","setKeyword","seoScore","setSeoScore","feedback","setFeedback","metaTitle","setMetaTitle","metaDescription","setMetaDescription","metaTitleFeedback","setMetaTitleFeedback","metaDescriptionFeedback","setMetaDescriptionFeedback","activeTab","setActiveTab","analyzeSEO","useCallback","debounce","score","feedbackItems","wordCount","split","length","push","type","message","slice","toLowerCase","includes","keywordDensity","match","RegExp","headingsCount","concat","linksCount","listsCount","imagesCount","analyzeMeta","titleFeedbackItems","descriptionFeedbackItems","titleLength","ctaKeywords","some","cta","descriptionLength","useEffect","FeedbackItem","_ref","item","_jsxs","className","children","_jsx","onClick","_Fragment","value","onChange","e","target","placeholder","style","width","map","index","ReactDOM","render","Router","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.0a1ecf45.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { debounce } from 'lodash';\n\nconst SEOContentOutlineTool = () => {\n  const [content, setContent] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [seoScore, setSeoScore] = useState(0);\n  const [feedback, setFeedback] = useState([]);\n  const [metaTitle, setMetaTitle] = useState('');\n  const [metaDescription, setMetaDescription] = useState('');\n  const [metaTitleFeedback, setMetaTitleFeedback] = useState([]);\n  const [metaDescriptionFeedback, setMetaDescriptionFeedback] = useState([]);\n  const [activeTab, setActiveTab] = useState('content');\n\n  const analyzeSEO = useCallback(debounce(() => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Content length check\n    const wordCount = content.split(/\\s+/).length;\n    if (wordCount >= 300) {\n      score += 20;\n      feedbackItems.push({ type: 'success', message: \"Good content length (300+ words)\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Content is too short. Aim for 300+ words\" });\n    }\n\n    // Keyword presence in introduction\n    if (content.slice(0, 100).toLowerCase().includes(keyword.toLowerCase())) {\n      score += 15;\n      feedbackItems.push({ type: 'success', message: \"Keyword present in the introduction\" });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Include the keyword in the first 100 characters\" });\n    }\n\n    // Keyword density\n    const keywordCount = (content.toLowerCase().match(new RegExp(keyword.toLowerCase(), \"g\")) || []).length;\n    const keywordDensity = (keywordCount / wordCount) * 100;\n    if (keywordDensity >= 0.5 && keywordDensity <= 2.5) {\n      score += 15;\n      feedbackItems.push({ type: 'success', message: \"Good keyword density\" });\n    } else if (keywordDensity > 2.5) {\n      feedbackItems.push({ type: 'error', message: \"Keyword stuffing detected. Reduce keyword usage\" });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Increase keyword usage slightly\" });\n    }\n\n    // Headings check\n    const headingsRegex = /^#+\\s.+$/gm;\n    const headingsCount = (content.match(headingsRegex) || []).length;\n    if (headingsCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${headingsCount} heading(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Add headings (use # for h1, ## for h2, etc.)\" });\n    }\n\n    // Links check\n    const linksRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n    const linksCount = (content.match(linksRegex) || []).length;\n    if (linksCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${linksCount} link(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'error', message: \"Add internal or external links\" });\n    }\n\n    // Lists check\n    const listsRegex = /^(-|\\d+\\.)\\s.+$/gm;\n    const listsCount = (content.match(listsRegex) || []).length;\n    if (listsCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${listsCount} list item(s) detected` });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Consider adding bullet points or numbered lists\" });\n    }\n\n    // Image alt text check\n    const imageRegex = /!\\[([^\\]]*)\\]\\(([^)]+)\\)/g;\n    const imagesCount = (content.match(imageRegex) || []).length;\n    if (imagesCount > 0) {\n      score += 10;\n      feedbackItems.push({ type: 'success', message: `${imagesCount} image(s) with alt text detected` });\n    } else {\n      feedbackItems.push({ type: 'warning', message: \"Add images with descriptive alt text\" });\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  }, 500), [content, keyword]);\n\n  const analyzeMeta = useCallback(debounce(() => {\n    let titleFeedbackItems = [];\n    let descriptionFeedbackItems = [];\n\n    // Meta title checks\n    const titleLength = metaTitle.length;\n    if (titleLength >= 50 && titleLength <= 60) {\n      titleFeedbackItems.push({ type: 'success', message: \"Good meta title length (50-60 characters)\" });\n    } else if (titleLength < 50) {\n      titleFeedbackItems.push({ type: 'error', message: \"Meta title is too short. Aim for 50-60 characters\" });\n    } else {\n      titleFeedbackItems.push({ type: 'error', message: \"Meta title is too long. Aim for 50-60 characters\" });\n    }\n\n    if (metaTitle.toLowerCase().includes(keyword.toLowerCase())) {\n      titleFeedbackItems.push({ type: 'success', message: \"Keyword present in meta title\" });\n    } else {\n      titleFeedbackItems.push({ type: 'error', message: \"Include the keyword in the meta title\" });\n    }\n\n    const ctaKeywords = [\"buy\", \"get\", \"try\", \"find\", \"learn\"];\n    if (ctaKeywords.some(cta => metaTitle.toLowerCase().includes(cta))) {\n      titleFeedbackItems.push({ type: 'success', message: \"Call-to-Action keyword present in meta title\" });\n    } else {\n      titleFeedbackItems.push({ type: 'warning', message: \"Consider adding a Call-to-Action keyword in the meta title\" });\n    }\n\n    // Meta description checks\n    const descriptionLength = metaDescription.length;\n    if (descriptionLength >= 50 && descriptionLength <= 160) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Good meta description length (50-160 characters)\" });\n    } else if (descriptionLength < 50) {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Meta description is too short. Aim for 50-160 characters\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Meta description is too long. Aim for 50-160 characters\" });\n    }\n\n    if (metaDescription.toLowerCase().includes(keyword.toLowerCase())) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Keyword present in meta description\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'error', message: \"Include the keyword in the meta description\" });\n    }\n\n    if (ctaKeywords.some(cta => metaDescription.toLowerCase().includes(cta))) {\n      descriptionFeedbackItems.push({ type: 'success', message: \"Call-to-Action present in meta description\" });\n    } else {\n      descriptionFeedbackItems.push({ type: 'warning', message: \"Consider adding a Call-to-Action in the meta description\" });\n    }\n\n    // Update state\n    setMetaTitleFeedback(titleFeedbackItems);\n    setMetaDescriptionFeedback(descriptionFeedbackItems);\n  }, 500), [metaTitle, metaDescription, keyword]);\n\n  useEffect(() => {\n    if (content && keyword) {\n      analyzeSEO();\n    }\n  }, [content, keyword, analyzeSEO]);\n\n  useEffect(() => {\n    if (metaTitle || metaDescription) {\n      analyzeMeta();\n    }\n  }, [metaTitle, metaDescription, analyzeMeta]);\n\n  const FeedbackItem = ({ item }) => (\n    <li className={`feedback-item ${item.type}`}>\n      {item.type === 'success' && '✅ '}\n      {item.type === 'error' && '❌ '}\n      {item.type === 'warning' && '⚠️ '}\n      {item.message}\n    </li>\n  );\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-4\">UDigital SEO Tool</h1>\n      <div className=\"flex mb-4\">\n        <button\n          onClick={() => setActiveTab('content')}\n          className={`mr-2 px-4 py-2 rounded ${activeTab === 'content' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Content\n        </button>\n        <button\n          onClick={() => setActiveTab('meta')}\n          className={`px-4 py-2 rounded ${activeTab === 'meta' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n        >\n          Meta\n        </button>\n      </div>\n      {activeTab === 'content' && (\n        <>\n          <div className=\"mb-4\">\n            <input\n              type=\"text\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n              placeholder=\"Enter target keyword\"\n              className=\"w-full p-2 border rounded\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <textarea\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              placeholder=\"Enter your content here...\"\n              className=\"w-full p-2 border rounded h-64\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <h2 className=\"text-xl font-bold\">SEO Score: {seoScore}/100</h2>\n            <div className=\"w-full bg-gray-200 rounded\">\n              <div\n                className=\"bg-blue-500 text-xs leading-none py-1 text-center text-white rounded\"\n                style={{ width: `${seoScore}%` }}\n              >\n                {seoScore}%\n              </div>\n            </div>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold mb-2\">SEO Feedback:</h3>\n            <ul className=\"space-y-2\">\n              {feedback.map((item, index) => (\n                <FeedbackItem key={index} item={item} />\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n      {activeTab === 'meta' && (\n        <>\n          <div className=\"mb-4\">\n            <input\n              type=\"text\"\n              value={metaTitle}\n              onChange={(e) => setMetaTitle(e.target.value)}\n              placeholder=\"Enter meta title here...\"\n              className=\"w-full p-2 border rounded\"\n            />\n          </div>\n          <div className=\"mb-4\">\n            <textarea\n              value={metaDescription}\n              onChange={(e) => setMetaDescription(e.target.value)}\n              placeholder=\"Enter meta description here...\"\n              className=\"w-full p-2 border rounded h-32\"\n            />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold mb-2\">Meta Feedback:</h3>\n            {metaTitle && (\n              <>\n                <h4 className=\"font-bold mt-4 mb-2\">Meta Title Feedback:</h4>\n                <ul className=\"space-y-2\">\n                  {metaTitleFeedback.map((item, index) => (\n                    <FeedbackItem key={index} item={item} />\n                  ))}\n                </ul>\n              </>\n            )}\n            {metaDescription && (\n              <>\n                <h4 className=\"font-bold mt-4 mb-2\">Meta Description Feedback:</h4>\n                <ul className=\"space-y-2\">\n                  {metaDescriptionFeedback.map((item, index) => (\n                    <FeedbackItem key={index} item={item} />\n                  ))}\n                </ul>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SEOContentOutlineTool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SEOContentOutlineTool from './seo-content-outline-tool';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <SEOContentOutlineTool />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}