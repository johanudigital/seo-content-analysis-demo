{"version":3,"sources":["seo-content-outline-tool.js","index.js"],"names":["SEOContentOutlineTool","content","setContent","useState","keyword","setKeyword","seoScore","setSeoScore","feedback","setFeedback","useEffect","analyzeSEO","score","feedbackItems","wordCount","split","length","push","slice","toLowerCase","includes","keywordDensity","match","RegExp","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","style","width","concat","map","item","index","ReactDOM","render","Router","basename","process","document","getElementById"],"mappings":"oNA0HeA,MAxHeA,KAC5B,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAASC,GAAcF,mBAAS,KAChCG,EAAUC,GAAeJ,mBAAS,IAClCK,EAAUC,GAAeN,mBAAS,IAEzCO,qBAAU,KACJT,GAAWG,GACbO,GACF,GACC,CAACV,EAASG,IAEb,MAAMO,EAAaA,KACjB,IAAIC,EAAQ,EACRC,EAAgB,GAGpB,MAAMC,EAAYb,EAAQc,MAAM,OAAOC,OACnCF,GAAa,KACfF,GAAS,GACTC,EAAcI,KAAK,4CAEnBJ,EAAcI,KAAK,mDAIjBhB,EAAQiB,MAAM,EAAG,KAAKC,cAAcC,SAAShB,EAAQe,gBACvDP,GAAS,GACTC,EAAcI,KAAK,+CAEnBJ,EAAcI,KAAK,0DAIrB,MACMI,GADgBpB,EAAQkB,cAAcG,MAAM,IAAIC,OAAOnB,EAAQe,cAAe,OAAS,IAAIH,OAC1DF,EAAa,IAChDO,GAAkB,IAAOA,GAAkB,KAC7CT,GAAS,GACTC,EAAcI,KAAK,gCACVI,EAAiB,IAC1BR,EAAcI,KAAK,0DAEnBJ,EAAcI,KAAK,0CAIjBhB,EAAQmB,SAAS,MACnBR,GAAS,GACTC,EAAcI,KAAK,6BAEnBJ,EAAcI,KAAK,uDAIjBhB,EAAQmB,SAAS,SAAWnB,EAAQmB,SAAS,QAC/CR,GAAS,GACTC,EAAcI,KAAK,0BAEnBJ,EAAcI,KAAK,yCAIjBhB,EAAQmB,SAAS,MAAQnB,EAAQmB,SAAS,OAC5CR,GAAS,GACTC,EAAcI,KAAK,0BAEnBJ,EAAcI,KAAK,0DAIjBhB,EAAQmB,SAAS,OAASnB,EAAQmB,SAAS,OAC7CR,GAAS,GACTC,EAAcI,KAAK,wCAEnBJ,EAAcI,KAAK,+CAIrBV,EAAYK,GACZH,EAAYI,EAAc,EAG5B,OACEW,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACpCC,cAAA,MAAIF,UAAU,0BAAyBC,SAAC,6BACxCC,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,SACEC,KAAK,OACLC,MAAOzB,EACP0B,SAAWC,GAAM1B,EAAW0B,EAAEC,OAAOH,OACrCI,YAAY,uBACZR,UAAU,gCAGdE,cAAA,OAAKF,UAAU,OAAMC,SACnBC,cAAA,YACEE,MAAO5B,EACP6B,SAAWC,GAAM7B,EAAW6B,EAAEC,OAAOH,OACrCI,YAAY,6BACZR,UAAU,qCAGdD,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBF,eAAA,MAAIC,UAAU,oBAAmBC,SAAA,CAAC,cAAYpB,EAAS,UACvDqB,cAAA,OAAKF,UAAU,8DAA6DC,SAC1EC,cAAA,OAAKF,UAAU,iCAAiCS,MAAO,CAACC,MAAM,GAADC,OAAK9B,EAAQ,aAG9EkB,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAIF,UAAU,yBAAwBC,SAAC,kBACvCC,cAAA,MAAIF,UAAU,iBAAgBC,SAC3BlB,EAAS6B,KAAI,CAACC,EAAMC,IACnBZ,cAAA,MAAAD,SAAiBY,GAARC,YAIX,E,MChHVC,IAASC,OACPd,cAACe,IAAM,CAACC,SAAUC,6BAAuBlB,SACvCC,cAAC3B,EAAqB,MAExB6C,SAASC,eAAe,Q","file":"static/js/main.cb534982.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SEOContentOutlineTool = () => {\n  const [content, setContent] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [seoScore, setSeoScore] = useState(0);\n  const [feedback, setFeedback] = useState([]);\n\n  useEffect(() => {\n    if (content && keyword) {\n      analyzeSEO();\n    }\n  }, [content, keyword]);\n\n  const analyzeSEO = () => {\n    let score = 0;\n    let feedbackItems = [];\n\n    // Check content length\n    const wordCount = content.split(/\\s+/).length;\n    if (wordCount >= 300) {\n      score += 20;\n      feedbackItems.push(\"✅ Good content length (300+ words)\");\n    } else {\n      feedbackItems.push(\"❌ Content is too short. Aim for 300+ words\");\n    }\n\n    // Check keyword presence in the first 100 characters\n    if (content.slice(0, 100).toLowerCase().includes(keyword.toLowerCase())) {\n      score += 15;\n      feedbackItems.push(\"✅ Keyword present in the introduction\");\n    } else {\n      feedbackItems.push(\"❌ Include the keyword in the first 100 characters\");\n    }\n\n    // Check keyword density\n    const keywordCount = (content.toLowerCase().match(new RegExp(keyword.toLowerCase(), \"g\")) || []).length;\n    const keywordDensity = (keywordCount / wordCount) * 100;\n    if (keywordDensity >= 0.5 && keywordDensity <= 2.5) {\n      score += 15;\n      feedbackItems.push(\"✅ Good keyword density\");\n    } else if (keywordDensity > 2.5) {\n      feedbackItems.push(\"❌ Keyword stuffing detected. Reduce keyword usage\");\n    } else {\n      feedbackItems.push(\"❌ Increase keyword usage slightly\");\n    }\n\n    // Check for headings\n    if (content.includes('#')) {\n      score += 10;\n      feedbackItems.push(\"✅ Headings detected\");\n    } else {\n      feedbackItems.push(\"❌ Add headings (use # for h1, ## for h2, etc.)\");\n    }\n\n    // Check for links\n    if (content.includes('http') || content.includes('www')) {\n      score += 10;\n      feedbackItems.push(\"✅ Links detected\");\n    } else {\n      feedbackItems.push(\"❌ Add internal or external links\");\n    }\n\n    // Check for bullet points or numbered lists\n    if (content.includes('-') || content.includes('1.')) {\n      score += 10;\n      feedbackItems.push(\"✅ Lists detected\");\n    } else {\n      feedbackItems.push(\"❌ Consider adding bullet points or numbered lists\");\n    }\n\n    // Check for image alt text (simulated)\n    if (content.includes('![') && content.includes('](')) {\n      score += 10;\n      feedbackItems.push(\"✅ Image with alt text detected\");\n    } else {\n      feedbackItems.push(\"❌ Add images with descriptive alt text\");\n    }\n\n    // Update state\n    setSeoScore(score);\n    setFeedback(feedbackItems);\n  };\n\n  return (\n    <div className=\"p-4 max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">SEO Content Outline Tool</h1>\n      <div className=\"mb-4\">\n        <input\n          type=\"text\"\n          value={keyword}\n          onChange={(e) => setKeyword(e.target.value)}\n          placeholder=\"Enter target keyword\"\n          className=\"w-full p-2 border rounded\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Enter your content here...\"\n          className=\"w-full h-64 p-2 border rounded\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <h2 className=\"text-xl font-bold\">SEO Score: {seoScore}/100</h2>\n        <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 mt-2\">\n          <div className=\"bg-blue-600 h-2.5 rounded-full\" style={{width: `${seoScore}%`}}></div>\n        </div>\n      </div>\n      <div>\n        <h3 className=\"text-lg font-bold mb-2\">SEO Feedback:</h3>\n        <ul className=\"list-disc pl-5\">\n          {feedback.map((item, index) => (\n            <li key={index}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SEOContentOutlineTool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SEOContentOutlineTool from './seo-content-outline-tool';\nimport './index.css';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <SEOContentOutlineTool />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}